{"version":3,"sources":["logo.svg","components/AuthorsTable.js","components/CreateAuthorForm.js","App.js","reportWebVitals.js","index.js"],"names":["AuthorsTable","props","useState","authors","setAuthors","useEffect","axios","get","then","response","data","catch","error","console","log","className","length","map","item","index","name","type","value","onClick","e","navigate","CreateAuthorForm","setName","errors","setErrors","to","err","style","color","onSubmit","preventDefault","post","errorResponse","errorArr","Object","keys","key","push","message","onChange","target","marginLeft","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,I,0CC0BAA,EAtBM,SAAAC,GAAU,IAAD,EACIC,mBAAS,IADb,mBACnBC,EADmB,KACVC,EADU,KAS1B,OANAC,qBAAW,WACPC,IAAMC,IAAI,2CACLC,MAAK,SAAAC,GAAQ,OAAIL,EAAYK,EAASC,SACtCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,uBAAwBF,QAC1D,IAGE,sBAAKG,UAAU,YAAf,UAEOZ,EAAQa,OAAS,GAAKb,EAAQc,KAAI,SAACC,EAAMC,GACrC,OAAO,8BAAkBD,EAAKE,MAAbD,MAGzB,uBAAOE,KAAK,SAASC,MAAM,uCAAuCC,QAAS,SAAAC,GAAC,OAAIC,YAAS,eCkCrFC,EAlDU,SAAAzB,GAAU,IAAD,EAENC,mBAAS,IAFH,mBAEvBkB,EAFuB,KAEjBO,EAFiB,OAGFzB,mBAAS,IAHP,mBAGvB0B,EAHuB,KAGfC,EAHe,KAqB9B,OACI,sBAAKd,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,4BAAG,cAAC,IAAD,CAAMe,GAAG,IAAT,oBACH,sDAEQF,EAAOX,KAAI,SAACc,EAAKZ,GAAN,OAAgB,uBAAmBa,MAAO,CAACC,MAAM,OAAjC,SAA0CF,GAA9BZ,cAKvD,qBAAKJ,UAAU,MAAf,SACI,qBAAKA,UAAU,QAAf,SACI,uBAAMmB,SA9BL,SAAAV,GACbA,EAAEW,iBACF7B,IAAM8B,KAAK,4CAA6C,CACpDhB,KAAMA,IAELZ,MAAK,kBAAMiB,YAAS,QACpBd,OAAM,SAAAoB,GAGH,IAFA,IAAMM,EAAgBN,EAAItB,SAASC,KAAKkB,OAClCU,EAAW,GACjB,MAAkBC,OAAOC,KAAKH,GAA9B,eAA8C,CAAzC,IAAMI,EAAG,KACVH,EAASI,KAAKL,EAAcI,GAAKE,SAGrCd,EAAUS,OAiBN,UACI,sBAAKvB,UAAU,aAAf,UACI,0CACA,uBAAO6B,SAAU,SAACpB,GAAD,OAAKG,EAAQH,EAAEqB,OAAOvB,QAAQD,KAAK,OAAON,UAAU,oBAEzE,sBAAKA,UAAU,wBAAf,UACI,wBAAQQ,QAAS,kBAAIE,YAAS,MAAMJ,KAAK,SAASN,UAAU,2BAA5D,oBACA,wBAAQA,UAAU,yBAAyBiB,MAAO,CAACc,WAAY,QAA/D,kCC7BbC,MAXf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,eAAC,IAAD,WACD,cAAC,EAAD,CAAciC,KAAK,MACnB,cAAC,EAAD,CAAkBA,KAAK,eCCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.95868193.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\nimport { Link, navigate } from \"@reach/router\"\r\n\r\nconst AuthorsTable = props => {\r\n    const [authors, setAuthors] = useState([])\r\n\r\n    useEffect( () => {\r\n        axios.get(\"http://localhost:8000/api/getAllAuthors\")\r\n            .then(response => setAuthors((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n           {\r\n               authors.length > 0 && authors.map((item, index) => {\r\n                   return <div key={index}>{item.name}</div>\r\n               })\r\n           }\r\n           <input type=\"button\" value=\"Please Press here to add new authors\" onClick={e => navigate('/new')}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AuthorsTable","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { navigate, Link } from \"@reach/router\"\r\n\r\nconst CreateAuthorForm = props => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [errors, setErrors] = useState([])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/api/createNewAuthor\", {\r\n            name: name,\r\n        })\r\n            .then(() => navigate(\"/\"))\r\n            .catch(err =>{\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <p><Link to=\"/\">Home</Link></p>\r\n                    <p>Add a new author:&nbsp;\r\n                        {\r\n                            errors.map((err, index) => <small key={index} style={{color:\"red\"}}>{err}</small>)\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <form onSubmit={ onSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <label>Name:</label>\r\n                            <input onChange={(e)=>setName(e.target.value)} type=\"text\" className=\"form-control\"/>\r\n                        </div>\r\n                        <div className=\"form-group text-right\">\r\n                            <button onClick={()=>navigate(\"/\")} type=\"button\" className=\"btn btn-secondary btn-sm\">Cancel</button>\r\n                            <button className=\"btn btn-primary btn-sm\" style={{marginLeft: \"10px\"}}>Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CreateAuthorForm","import logo from './logo.svg';\nimport './App.css';\nimport { Router } from '@reach/router';\nimport AuthorsTable from './components/AuthorsTable'\nimport CreateAuthorForm from './components/CreateAuthorForm'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n     <AuthorsTable path=\"/\"/>\n     <CreateAuthorForm path=\"/new\"/>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}